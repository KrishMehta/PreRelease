TASK 1

DECLARE cow: INTEGER
PRINT “Input the herd size”
INPUT cow
CONSTANT totalCow: = cow

DECLARE cowID: INTEGER
DECLARE tempYield: REAL
DECLARE identity[]: ARRAY[1:totalCow] OF INTEGER
DECLARE yield[]: ARRAY[1:totalCow] OF REAL

FOR count ← 1 TO totalCow
    PRINT “Input the cow identity for cow #”, count
    INPUT cowID
	WHILE cowID < 100 OR cowID > 999  DO
//	WHILE LENGTH(cowID)<> 3 DO
      	PRINT “Please input an identity between 001 & 999”
		INPUT cowID
    ENDWHILE
    identity[count] ← cowID
NEXT

FOR day ← 1 TO 7
    FOR session ← 1 TO 2
        FOR count ← 1 TO totalCow
            PRINT “Enter the identity of the cow to be milked on day #”, day, “ session #”, session
            INPUT cowID
            PRINT “Enter the yield of cow #”, cowID, “ to one D.P.”
        	INPUT tempYield
            FOR counter ← 1 TO totalCow
           	    IF cowID = identity[counter] THEN
                    yield[counter] ← yield[counter] + tempYield
        		ENDIF
        	NEXT
     	NEXT
   	NEXT
NEXT



TASK 2

DECLARE totalYield: REAL

totalYield ← 0

FOR count ← 1 TO totalCow
    totalYield ← totalYield + yield[count]
NEXT

DECLARE roundedTotalYield: REAL
DECLARE average: REAL

roundedTotalYield ← 0
average ← 0

IF totalYield MOD 1 < 0.5 THEN
     roundedTotalYield ← totalYield - (totalYield MOD 1)
ELSE
    roundedTotalYield ← totalYield + (1 - (totalYield MOD 1)
ENDIF

PRINT "The total volume of milk for the herd to the nearest whole litre is ", roundedTotalYield

average ← totalYield / totalCow

IF average MOD 1 < 0.5 THEN
    average ←  average - (average MOD 1)
ELSE
    average ←  average + (1 - (average MOD 1)
ENDIF

PRINT "The average yield per cow to the nearest whole litre is ", average

TASK 3

DECLARE highestYield: REAL
DECLARE dailyYield[]: ARRAY [1:totalCow] OF REAL
DECLARE low[]: ARRAY[1:totalCow] OF INTEGER

FOR day ← 1 TO 7
    FOR session ← 1 TO 2
        FOR count ← 1 TO totalCow
            PRINT “Enter the yield of cow # “, cowID, “ to one d.p.”
            INPUT tempYield
            dailyYield[count] ← dailyYield[count] + tempYield
            IF session = 2 THEN
                IF dailyYield[count] < 12 THEN
                    low[count] ← low[count] + 1
      			ENDIF
                dailyYield[count] ← 0
			ENDIF
		NEXT
    NEXT
NEXT

highestYield ← 0

FOR count ← 1 TO totalcow
    IF yield[count] > highestYield THEN
        highestYield ← yield[count]
    ENDIF
NEXT

FOR count ← 1 TO totalCow
    IF yield[count] = highestYield THEN
        PRINT “The cow identity: “, identity[count], “ has the highest production of “, highestYield
    ENDIF
NEXT

FOR count ← 1 TO totalCow
   	IF low[count] > 3 THEN
        PRINT “The cow identity:” identity[count], “ has produced less than 12 litres of milk for at least 4 days.”
   	ENDIF
NEXT
